-- By default this file is used by `persistFileWith` in Model.hs (which is imported by Foundation.hs)
-- Syntax for this file here: https://github.com/yesodweb/persistent/blob/master/docs/Persistent-entity-syntax.md

User
    ident Text
    password Text Maybe
    UniqueUser ident
    deriving Typeable
Email
    email Text
    userId UserId Maybe
    verkey Text Maybe
    UniqueEmail email
Comment json -- Adding "json" causes ToJSON and FromJSON instances to be derived.
    message Text
    userId UserId Maybe
    deriving Eq
    deriving Show
EventSeries
  name Text
  venue Text
  description Text
  -- firstDay Day
  primeStartTime TimeOfDay
  seriesPattern Text -- e.g. "xxDDxxxxxD" means that including the `firstDateTime`, this event series has a ten-day repeating cycle where events happen on the third, fourth, and tenth days of the cycle. "D"s represent event days, any other character represents a non-event day.
  finalDay Day -- you can adjust this to extend the series
-- TODO: add a feature with an attribute of `EventSeries`, maybe called `supercededBy EventSeriesId Maybe`, which allows an EventSeries to indicate that it has been superceded by the referenced EventSeries.  And this could/would be a transitive chain of supercession that we can follow to a currently active EventSeries.
RoleDetails
  eventSeriesId EventSeriesId
  description Text
  offsetTime Int -- minutes from the series `primeStartTime` when this role is needed; could make the role happen on a different day, could even be a role that happens *before* the `primeStartTime` of the event instance.
  duration Int
  desiredNrParticipants Int -- the number of participants requested for this role; more could sign up than this, though.  If this is 0, that's fine, but you might want to indicate what that means in the description (e.g. maybe you have a predefined set of people for this role, or maybe it's optional).  TODO: change this to participants instead of volunteers, and rename the whole project to something like "signups".
-- TODO: add a feature in which the role details can indicate that the time and duration represent a *window* in which the role can be executed.
-- TODO: add a feature in which role details can indicate that the role should be active or inactive; this would allow "configuring" an event series without having to end the series and create a new one.  Currently you could modify an instance of role details, but that would retroactively apply the new details to historic events.  As such, we might want to consider role details (and, potentially every entity in the database) as basically immutable (to the best of our ability).
Event
  eventSeriesId EventSeriesId
  eventDay Day -- basically so we don't have to compute it every time
Role
  roleDetailsId RoleDetailsId
  eventId EventId
Participant
  roleId RoleId
  firstName Text
  lastName Text Maybe
  email Text Maybe
  phone Text Maybe
  willingToBottomline Bool Maybe
  feelings Text Maybe
